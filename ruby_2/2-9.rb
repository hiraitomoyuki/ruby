# 10進数以外の整数リテラル

# 2進数
0b11111111 # => 255
# 8進数
0377       # => 255
# 16進数
0xff       # => 255

# ビット演算

(~0b1010).to_s(2)         # => "-1011" ビット反転
(0b1010 & 0b1100).to_s(2) # => "1000" ビット積
(0b1010 | 0b1100).to_s(2) # => "1110" ビット和
(0b1010 ^ 0b1100).to_s(2) # => "110" 排他的論理和
(0b1010 >> 1).to_s(2)     # => "101" 右ビットシフト
(0b1010 << 1).to_s(2)     # => "10100" 左ビットシフト

# 指数表現

2e-3 # => 0.002   2x10の-3乗


# 数値クラスのあれこれ

#整数であればIntegerクラス、小数であればFloatクラスになる
10.class  # => Integer
1.5.class # => Float

# Ruby 2.3以前は整数クラスが2つあった
10.class                    # => Fixnum
999999999999999999999.class # => Bignum

# Ruby 2.4以降はどちらもIntegerクラスになった
10.class                    # => Integer
999999999999999999999.class # => Integer

# 有理数リテラルを使う(3rが有理数リテラル)
r = 2 / 3r
r       # => (2/3)
r.class # => Rational

#文字列から有理数に変換する
r = '2/3'.to_r
r       # => (2/3)
r.class # => Rational

# 複素数リテラルを使う(0.5iが複素数リテラル)
c = 0.3 - 0.5i
c       # => (0.3-0.5i)
c.class # => Complex

# 文字列から複素数に変換する
c = '0.3-0.5i'.to_c
c       # => (0.3-0.5i)
c.class # => Complex